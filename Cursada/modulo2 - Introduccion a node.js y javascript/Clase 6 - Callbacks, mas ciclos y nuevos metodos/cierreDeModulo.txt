Cierre de módulo
¡Felicitaciones! Llegamos al final del módulo de Introducción a Node.js y JavaScript, el primer paso de este camino para convertirnos en desarrolladores web Full Stack. A lo largo de este módulo fuimos trabajando para conseguir los siguientes objetivos:

Comenzar a escribir nuestras primeras líneas de código y, luego, nuestra primera aplicación funcional.
Adquirir las bases de la programación y las herramientas con las que trabajaremos a lo largo de toda la cursada.
Manejar la consola.
Desarrollar una calculadora y una aplicación de tareas.
Lidiar con la frustración que muchas veces genera el código. ¡Esto no termina acá! Nos va a acompañar durante toda la cursada.
Adquirir la práctica de primero pensar qué queremos hacer y luego codear.
Para finalizar el módulo proponemos tres actividades de cierre:

Primero, una evaluación diagnóstica a modo de check point del módulo, donde presentaremos una situación problemática a resolver a través de distintos cuestionarios y coding playground. Tendremos que tomar decisiones, escribir código y prestar atención a la sintaxis de las estructuras y herramientas más importantes de JavaScript. Esta actividad es obligatoria.
Segundo, en la sección Habilidades blandas, proponemos una autoevaluación vinculada a los aprendizajes y actividades que nos resultan más significativos a la hora de estudiar programación. Esta actividad también es obligatoria.
Por último, en la sección Para saber más, compartiremos videos, documentación y sitios de interés para que podamos seguir explorando sobre Node.js y JavaScript. Este contenido no es obligatorio, sino que son recursos para que los revisemos cuando nos interese.

Check point de Introducción a Node.js y JavaScript. ¿De qué se trata?
A lo largo de esta actividad tendremos distintas instancias de resolución de problemas, toma de decisiones y escritura de código en el coding playground. Estas actividades son autocorregibles, es decir, luego de finalizar cada una de ellas tendremos un feedback automático que nos indicará si nuestra solución o respuesta es correcta.

¿Por qué es importante un check point? Para chequear nuestro progreso a lo largo de este módulo e identificar en qué cuestiones necesitamos mejorar. Esto es muy importante para poder continuar con el curso de forma tal que tengamos una base sobre la cual apoyar los siguientes conocimientos y herramientas.

Antes de empezar
Esta actividad demandará tiempo y recomendamos hacerla toda de una sola vez. Requerirá que utilicemos todos los conocimientos y herramientas que son importantes de JavaScript. Por eso, si tenemos alguna duda, podemos repasar y practicar con los ejercicios de las clases. Una vez que sintamos que estamos listos, podemos arrancar con el check point. Al ser una actividad de diagnóstico individual, la dupla docente no brindará las respuestas, lo ideal es que podamos resolverlas por nosotros mismos. No pasa nada si queda alguna sin resolver, ya que cuando terminemos podremos consultar con la dupla todas nuestras dudas. Tener en cuenta que compartir las respuestas entre los estudiantes va en contra de las reglas.

Otra información importante, y a tener en cuenta, es que los cuestionarios solo se pueden responder una vez. En cambio, los ejercicios se pueden corregir tantas veces como queramos. Como ya mencionamos, esta actividad es obligatoria, para la aprobación del curso. No es necesario que todos los ejercicios y cuestionarios estén bien, si no que lo importante es que completemos todas las actividades propuestas.

Podemos consultar todos los materiales que necesitemos para resolver las distintas actividades, los buenos programadores acuden a la documentación siempre que lo necesitan. Por eso preparamos los apuntes que compartimos a continuación: para descargarlos y utilizarlos siempre que los necesitemos.

Apuntes del módulo

Descargar
Concesionaria de autos
Este ejercicio es para que puedas poner en práctica los contenidos más importantes de JavaScript que vimos en este primer módulo de cursada. Al realizarlo, vas a poder asegurar que venís bien con los contenidos. La propuesta es ir en forma incremental con los contenidos vistos, por lo cual es normal que a medida que avances se vuelva más complejo y difícil. Si te resulta más sencillo, podés intentar resolver la ejercitación en VS Code y luego poner la respuesta en Playground. Si en algún momento no lográs avanzar y estás perdido, no dudes en consultar a tus compañeros para lograr comprender qué es lo que hay que hacer y qué es lo que hace el código.

Objetivos
 Tener feedback propio de ejercitaciones más complejas e integradoras.
 Probar tus conocimientos y autonomía a la hora de resolver un problema.
 Detectar puntos de mejora.
 Fortalecer las bases y conceptos de programación con JavaScript.
Metodología
Vamos a simular una situación de trabajo para situarnos en un contexto. Estás trabajando como desarrollador de CodeAR S.A., una reconocida software factory. En el equipo de trabajo contás con María y con Juan.


Maria

Es líder técnica del área. Es una persona muy ocupada y su rol consiste en traducir las necesidades del cliente a requerimientos técnicos.


Juan

Es pasante y está empezando en el mundo de la programación. Si bien es algo tímido, le gusta aprender cosas nuevas y encarar nuevos desafíos.


Vos

Si bien estás aprendiendo cosas como Juan, ya contás con algunos conocimientos previos.