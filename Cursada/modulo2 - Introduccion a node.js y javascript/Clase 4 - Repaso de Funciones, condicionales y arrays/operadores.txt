Operadores
Dentro de la etapa del prework vimos cómo sumar dos valores numéricos, comparar dos cadenas de texto entre sí y unir una cadena de texto con un valor numérico para generar una única salida de texto. Vamos a retomar estos conceptos, ya que los operadores nos permiten manipular no solo el valor de las variables, sino también realizar operaciones aritméticas entre muchas cosas más.

En el siguiente video vamos a ver qué operadores existen y para qué se usa cada uno de ellos.

Para conocer

Tipos de operadores
Vimos cómo declarar una variable y asignarle un valor, pero: ¿para qué sirve almacenar datos en variables? Las variables nos permiten reutilizar el dato asignado en ellas con solo invocar su nombre.

También, algo muy importante, así como podemos hacer operaciones matemáticas como sumar (+) o restar (-) números, podemos hacer lo mismo con las variables que los referencien.

    

/* ==========================
DE ASIGNACIÓN
========================== */

// El operador "=" sirve para asignar el valor 40 a una variable llamada "edad"

var edad = 40

/* ==========================
ARITMÉTICOS
========================== */

// Nos permiten hacer operaciones matemáticas

10 + 15 //---> Suma
10 - 15 //---> Resta
10 * 15 //---> Multiplicación
10 / 15 //---> División
15++    //---> Incremento de uno en uno: 15 + 1
15--    //---> Decremento de uno en uno: 15 - 1
15 % 5  //---> Módulo. El resto obtenido de dividir 15 entre 5: 0
15 % 2  //---> Módulo. El resto obtenido de dividir 15 entre 2: 1

/* ==========================
DE COMPARACIÓN SIMPLE
========================== */

10 == 15 //---> Igualdad
10 != 15 //---> Desigualdad

/* ==========================
DE COMPARACIÓN ESTRICTA
========================== */

10 === 15 //---> Estrictamente igual (mismo valor y tipo de dato)
10 !== 15 //---> Compara si los operandos no son iguales y/o no del mismo tipo

/* ==========================
OPERADORES RELACIONALES
========================== */

15 > 10  //---> Mayor que...
15 >= 10  //---> Mayor igual que...
15 < 10  //---> Menor que...
15 <= 10  //---> Menor igual que...

/* ==========================
LÓGICOS
========================== */

// Permiten combinar valores booleanos y su resultado a la vez también es un booleano

// && Todos sus valores deben evaluar como TRUE
(10 > 15) && (10 != 20) //---> 

// || (OR) Solo un valor debe evaluar como TRUE para que la expresión sea TRUE

(10 > 15) || (10 != 20) //---> TRUE porque 10 != 20 es verdadero

// ! (NOT) - Niega la condición, TRUE pasa a FALSE y FALSE a TRUE

let color = 'Verde';
let noEsRojo = !(color == 'Rojo'); //---> Esto daría FALSE, 
pero como está negado, da TRUE


